@startuml Media Player Class Diagram

left to right direction
skinparam outputFormat svg
scale 1.2

skinparam classAttributeIconSize 0
skinparam class {
    BackgroundColor white
    ArrowColor black
    BorderColor black
}



package View {
    class CLIManager {
        - views : vector<ViewBase*>
        - currentView : ViewBase*
        - baseCurrentPlayView : BaseCurrentPlayView
        + switchView(view : ViewBase*) : void
        + addView(view : ViewBase*) : void
        + removeView(view : ViewBase*) : void
    }

    abstract class ViewBase {
        + handleInput() : void
        + hide() : void
        + virtual showMenu() : void
        + virtual ~ViewBase()
    }

    class ScanView {
        + showMenu() override : void
        + showScanUSB() : void
        + showScanDirectory() : void
    }

    class MediaFileView {
        + showMenu() override : void
        + showMetadataFile(file : MediaFile)
        + showAllMediaFile(metadataManager : MetadataManager)
    }

    class MediaFileHandlerView {
        + showMenu() override : void
        + showAddMediaFile() : void
        + showEditMediaFile() : void
        + showRemoveMediaFile() : void
    }

    class PlaylistView {
        + showMenu() override : void
        + showAllPlaylist(playlistManager : PlaylistManager)
        + showPlaylistContent(playlist : Playlist)
    }

    class PlaylistHandlerView {
        + showMenu() override : void
        + showCreatePlaylist() : void
        + showEditPlaylist() : void
        + showDeletePlaylist() : void
    }

    class BaseCurrentPlayView {
        + virtual showCurrentPlay() : void
    }

    class VolumeView {
        + showCurrentPlay() override: void
        + showVolume(level : int) : void
    }

    class MetadataView {
        + showCurrentPlay() override: void
        + showMetadata(file : MediaFile) : void
    }

    class MenuControlPlayView {
        + showCurrentPlay() override: void
        + displayControls() : void
        + onPlayButton() : void
        + onPauseButton() : void
        + onNextButton() : void
        + onPreviousButton() : void
        + onVolumeChange(level : int) : void
    }

    class BoardManager {
        - lcd : S32K144InterfaceLCD
    }

    class S32K144InterfaceLCD {
        + showCurrentPlayLCD(currentPlay : CurrentPlay) : void
    }
}

CLIManager o--> ViewBase : has >
CLIManager o--> BaseCurrentPlayView : has >
ViewBase <|-- ScanView
ViewBase <|-- MediaFileView
ViewBase <|-- MediaFileHandlerView
ViewBase <|-- PlaylistView
ViewBase <|-- PlaylistHandlerView
BaseCurrentPlayView <|-- VolumeView
BaseCurrentPlayView <|-- MetadataView
BaseCurrentPlayView <|-- MenuControlPlayView
BoardManager --> S32K144InterfaceLCD


package Controller {
    class ControllerManager {
        - mediaScannerController: MediaScannerController
        - playerController: PlayerController
        - mediaPlaylistController: MediaPlaylistController
        - mediaFileController: MediaFileController
        - deviceController: DeviceController
        - modelManager: ModelManager
        - cliManager: CLIManager
        + handleUserInput(input: string) : void
        + dispatchToController(input: string) : void
    }

    
    class MediaScannerController {
        - metadataManager: MetadataManager
        + scanDirectory(path: string) : void
        + scanUSB(path: string) : void
        + sendScanResultToView(view: MediaFileView) : void
    }

    
    class PlayerController {
        - currentPlay : CurrentPlay
        - baseCurrentPlayView : BaseCurrentPlayView
        + getCurrentFile() : shared_ptr<MediaFile>
        + play(file: shared_ptr<MediaFile>) : void
        + pause() : void
        + next() : void
        + previous() : void
        + adjustVolume(level: int) : void
        + updateCurrentPlayView() : void
    }

    class MediaPlaylistController {
        - playlistManager: PlaylistManager
        + createPlaylist(name: string) : void
        + editPlaylist(id: int, name: string) : void
        + deletePlaylist(id: int) : void
        + sendPlaylistToView(view: PlaylistView) : void
        + sendPlaylistContentToView(playlist: Playlist, view: PlaylistView) : void
    }


    class MediaFileController {
        - metadataManager: MetadataManager
        + addMediaFileFromUSB(file : shared_ptr<MediaFile>)
        + addMediaFileFromPC(file : shared_ptr<MediaFile>)
        + editMediaFile(file : shared_ptr<MediaFile>)
        + removeMediaFile(file : shared_ptr<MediaFile>)
        + displayAllMediaFiles()
        + sendMediaFileToView(view: MediaFileView) : void
    }

    class DeviceController {
        - currentPlay : CurrentPlay
        - boardManager : BoardManager
        + setVolume(level: int)
        + updateDisplay(info: string)
        + handleButtonPress(button: ButtonType)
    }


}

ControllerManager "1" o-- "1" MediaScannerController : has >
ControllerManager "1" o-- "1" PlayerController : has >
ControllerManager "1" o-- "1" MediaPlaylistController : has >
ControllerManager "1" o-- "1" MediaFileController : has >
ControllerManager "1" o-- "1" DeviceController : has >


package Model {

    class ModelManager{
        - metadataManager: MetadataManager
        - playlistManager: PlaylistManager
        - currentPlay: CurrentPlay
        + getMetadataManager()
        + getPlaylistManager()
        + getCurrentPlay()
    }

    class CurrentPlay{
        - currentPlay: queue<shared_ptr<MediaFile>>
        - volume: int
        - isPlaying: bool
        - currentPosition: int
        + getCurrentFile(): shared_ptr<MediaFile>
        + play(file: shared_ptr<MediaFile>)
        + pause(file: shared_ptr<MediaFile>)
        + stop(file: shared_ptr<MediaFile>)
        + nextTrack(file: shared_ptr<MediaFile>)
        + previousTrack(file: shared_ptr<MediaFile>)
        + setVolume(level: int)
    }

    abstract class MediaFile {
        - fileName : String
        - pathName : String
        - size : double
        - duration : String
        - fileType : String
        + getDuration(): int
        + getPath(): string
        + getName(): string
        + virtual editMediaFile() : void
        + virtual detailMediaFile() : void
        + virtual getType(): string
        + virtual ~MediaFile();
    }
    
    class AudioFile {
        - trackName : String
        - album : String
        - artist : String
        - publisher : String
        - genre : String
        - bitrate : int
        - sampleRate : int
        + getArtist(): string
        + getAlbum(): string
        + setArtist(artist: string)
        + getType() override : string
        + editMediaFile() override : void
        + detailMediaFile() override : void
    }
    
    class VideoFile {
        - codec: string
        - bitrate: int
        - resolution: string
        + getCodec(): string
        + getBitrate(): int
        + getResolution(): string
        + getType() override : string
        + editMediaFile() override : void
        + detailMediaFile() override : void
    }
    
    class Playlist {
        - id: int
        - name: string
        - mediaFiles: vector<shared_ptr<MediaFile>>
        + addFile(file: shared_ptr<MediaFile>)
        + removeFile(fileName: string)
        + getFilesfileName: string()
        + getName(): string
        + setName(name: string)
    }

    class MetadataManager {
        - listMediaFiles : vector<shared_ptr<MediaFile>>
        + addMediaFileFromUSB(file : shared_ptr<MediaFile>) : void
        + addMediaFileFromPC(file : shared_ptr<MediaFile>) : void
        + editMediaFile(file : shared_ptr<MediaFile>) : void
        + removeMediaFile(file : shared_ptr<MediaFile>) : void
        + displayAllMediaFiles() : void
    }
    
    class PlaylistManager {
        - playlists: vector<shared_ptr<Playlist>>
        + createPlaylist(name: string): shared_ptr<Playlist>
        + editPlaylist(id: int, name: string)
        + deletePlaylist(id: int)
        + getPlaylist(id: int): shared_ptr<Playlist>
        + getAllPlaylists(): playlists
    }
    
}


enum MediaType {
    AUDIO
    VIDEO
}

enum ButtonType {
    PLAY_PAUSE
    NEXT
    PREVIOUS
    STOP
}

' Inheritance relationships
MediaFile <|-- AudioFile : extends
MediaFile <|-- VideoFile : extends

' Composition relationships (strong ownership)
PlaylistManager "1" o-- "0..*" Playlist : manages >
Playlist "1" o-- "0..*" MediaFile : contains >
MetadataManager "1" o-- "0..*" MediaFile : manages >

ModelManager "1" o-- "1" MetadataManager : has >
ModelManager "1" o-- "1" PlaylistManager : has >
ModelManager "1" o-- "1" CurrentPlay : has >

' Association relationships

MediaFile --> "1" MediaType : has type >

ControllerManager "1" o-- "1" ModelManager : has >
ControllerManager "1" o-- "1" CLIManager : has >
@enduml